
## アプリケーション環境構築
Python環境はディレクトリ内で完結したいので、pyenv + poetoryの環境を作りたいです。このディレクトリをROOTにして、環境構築をしてください。
すでに環境がある場合は、それを利用してください。

このプロジェクトでは、python/flask/bootstrap/docker/docker-compose/mysqlを使用します。必要となるpython packageを
poetryで管理をしてください。

------------------------------

## 要件定義、設計
クイズアプリをWebアプリで実装してください。

要件:

- 日本語UI。アクセシビリティ配慮。スマホでも操作しやすい。
- 形式: 4択クイズ
       クイズのカテゴリは選択できる。初期設定として「セキュリティ」は作成されている、IT系の
　　　  全カテゴリ共通で、最大20問のプールからランダム10問を出題。順番シャッフル。全問題数が10問以下の場合は重複を可能とする
- 各問に「正解後の解説」を日本語で表示。終了時にスコアと復習リストを提示。
- 用語例（必須に含める、説明は大学3年生向けのやさしい記述）:
  - 初期設定の「セキュリティ」カテゴリの場合
    XSS, CSRF, SQLインジェクション, パスワードリスト攻撃, レインボーテーブル, ゼロトラスト, 多要素認証, DPIA, SAST/DAST, CVE/CVSS, フィッシング, スミッシング, スピアフィッシング, ランサムウェア, サプライチェーン攻撃, ソーシャルエンジニアリング, セキュアコーディング, 侵入テスト, WAF, IAM
- 機能:
  1) タイマー(1問あたり30秒/可変)
  2) 効果音ON/OFF（正誤で異なる）
  3) 間違えた問題のみ復習モード
  4) 共有用にスコア文字列をコピー
- 実装: python/flask/bootstrap/docker/docker-compose/mysqlを使用する
- コードに丁寧なコメント。最後に「用語の参考リンク集（テキストのみ、リンクは#）」を付記。

最後に、テストのやり方（全問正解・全問不正解の再現手順）と、今後の拡張案（問題追加、難易度調整、検索機能）を追記。

実装はせずに、markdownファイルへの出力をお願いします。
------------------------------



------------------------------
## コード生成
[出力されたマークダウンファイルを添付]
定義した仕様で動く最小アプリのコード一式を生成してください。


------------------------------
## Dockerコンテナの構築（この時点でDockerを使用してなかったら）
Dockerを使用したアプリケーション、DBの構築をしてください

------------------------------
## レイアウトの修正



