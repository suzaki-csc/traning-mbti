
## アプリケーション環境構築
Python環境はディレクトリ内で完結したいので、pyenv + poetoryの環境を作りたいです。このディレクトリをROOTにして、環境構築をしてください。
すでに環境がある場合は、それを利用してください。

このプロジェクトでは、python/flask/bootstrap/docker/docker-compose/mysqlを使用します。必要となるpython packageを
poetryで管理をしてください。

------------------------------

## 要件定義、設計
あなたは熟練のフロントエンドエンジニア兼テクニカルライターです。
初心者でも読める、**ビルド不要の単一HTMLファイル**で動く「パスワード強度チェッカー」を作りたいです。

要件:
- ファイル: index.html（内部にHTML/CSS/JSを全て記述）
- 日本語UI。アクセシビリティ配慮（ラベル、コントラスト、キーボード操作可）
- 機能:
  1) パスワード入力で即時に強度メーター（5段階: Very Weak / Weak / Fair / Strong / Very Strong、日本語表示）
  2) スコア算出は以下を組合せ: 長さ、文字種(小/大/数字/記号)、繰り返し/連番/キーボード並び(簡易)、よくある単語(小さな辞書を埋め込み)
  3) 推定エントロピー(bit)とオフライン総当たり想定時間(概算)を表示
  4) 改善アドバイスの日本語リストを提示（例: 長さを12文字以上、辞書語を避ける、似た置換"@→a"を避ける等）
  5) 「表示/非表示」トグル、クリップボードコピー、ランダム安全候補の提案ボタン（12～16文字、複数種）
  6) 入力フィールド外にデータは送信しない（オフラインで完結）

- 実装メモ:
  - 依存ライブラリなし（zxcvbn等は使わず、軽量な自作ロジック）
  - 簡易辞書: "password, qwerty, 123456, admin, letmein, welcome, iloveyou" などをハードコード
  - 連番/キーボード並びの簡易検出(例: "1234", "qwerty", "asdf" 等)
  - 強度メーターはARIA対応のprogressやdivで実装
  - すべての関数に初心者向けコメントを入れる
  - 最下部に「実装方針と採点式の説明」を日本語で記載

- セキュリティ注意（説明のみ。実装外部送信なし）:
  - 入力は常に平文のままブラウザ内でのみ評価
  - 保存・送信はしない


実装はせずに、markdownファイルへの出力をお願いします。
------------------------------



------------------------------
## コード生成
[出力されたマークダウンファイルを添付]
定義した仕様で動く最小アプリのコード一式を生成してください。


------------------------------
## Dockerコンテナの構築
Dockerを使用したアプリケーション構築をしてください

------------------------------
## 結果保管
- パスワードチェックの結果をDBに保管してください
- パスワードは「複合不可なハッシュ値」「先頭1文字＋マスク文字」の2種類で保管します
- 他に、パスワードチェックの結果をDBに保管をします。

- DBはdocker-composeを使用して、アプリケーションと一括で起動停止ができるようにします

------------------------------
## 機能追加
- 「会社・学校での政策に沿った強度要件をカスタム定義」できるセクションを追加してください
- カスタム定義としては、文字の最小長、禁止文字種、禁止語（単語等）を設定できるようにしてください



